<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Architect Profile Form</title>
    <style>
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        body {
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 30px;
            color: #2c3e50;
        }
        .form-section {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        .form-section h2 {
            color: #2c3e50;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
        }
        input, textarea, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        textarea {
            min-height: 100px;
            resize: vertical;
        }
        .profile-image-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }
        .profile-preview {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background-color: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 15px;
            overflow: hidden;
        }
        .profile-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .project-item {
            border: 1px solid #eee;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 15px;
        }
        .project-image-preview {
            width: 100%;
            height: 200px;
            background-color: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 10px;
            overflow: hidden;
        }
        .project-image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        button {
            background-color: #2c3e50;
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #1a2634;
        }
        .add-project-btn {
            background-color: #27ae60;
            margin-bottom: 20px;
        }
        .add-project-btn:hover {
            background-color: #219653;
        }
        .remove-project-btn {
            background-color: #e74c3c;
            margin-top: 10px;
        }
        .remove-project-btn:hover {
            background-color: #c0392b;
        }
        .submit-btn {
            width: 100%;
            padding: 15px;
            font-size: 18px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Architect Profile Form</h1>
        
        <form id="architectForm" action="/worker_profile_edit_submit" method="POST" enctype="multipart/form-data">
            <!-- Personal Info Section -->
            <div class="form-section">
                <h2>Personal Information</h2>
                
                <div class="profile-image-container">
                    <div class="profile-preview" id="profilePreview">
                        <span id="profilePlaceholder">Profile Photo</span>
                    </div>
                    <input type="file" id="profileImage" name="profileImage" accept="image/*">
                </div>
                
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" required>
                </div>
                
                <div class="form-group">
                    <label for="title">Professional Title</label>
                    <input type="text" id="title" name="title" required>
                </div>
                
                <div class="form-group">
                    <label for="experience">Years of Experience</label>
                    <input type="number" id="experience" name="experience" min="1" required>
                </div>
            </div>
            
            <!-- About Section -->
            <div class="form-section">
                <h2>About</h2>
                
                <div class="form-group">
                    <label for="about">Professional Biography</label>
                    <textarea id="about" name="about" required></textarea>
                </div>
                
                <div class="form-group">
                    <label>Specialties (Select all that apply)</label>
                    <div>
                        <input type="checkbox" id="sustainable" name="specialties" value="Sustainable design">
                        <label for="sustainable" style="display: inline;">Sustainable design</label>
                    </div>
                    <div>
                        <input type="checkbox" id="urban" name="specialties" value="Urban planning">
                        <label for="urban" style="display: inline;">Urban planning</label>
                    </div>
                    <div>
                        <input type="checkbox" id="residential" name="specialties" value="Residential architecture">
                        <label for="residential" style="display: inline;">Residential architecture</label>
                    </div>
                    <div>
                        <input type="checkbox" id="commercial" name="specialties" value="Commercial architecture">
                        <label for="commercial" style="display: inline;">Commercial architecture</label>
                    </div>
                    <div>
                        <input type="checkbox" id="interior" name="specialties" value="Interior design">
                        <label for="interior" style="display: inline;">Interior design</label>
                    </div>
                    <div>
                        <input type="checkbox" id="landscape" name="specialties" value="Landscape architecture">
                        <label for="landscape" style="display: inline;">Landscape architecture</label>
                    </div>
                </div>
            </div>
            
            <!-- Projects Section -->
            <div class="form-section">
                <h2>Notable Projects</h2>
                <button type="button" class="add-project-btn" id="addProjectBtn">+ Add Project</button>
                
                <div id="projectsContainer">
                    <!-- Projects will be added here dynamically -->
                </div>
            </div>
            
            <button type="submit" class="submit-btn">Update Profile</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Profile Image Preview
            const profileImage = document.getElementById('profileImage');
            const profilePreview = document.getElementById('profilePreview');
            const profilePlaceholder = document.getElementById('profilePlaceholder');
            
            profileImage.addEventListener('change', function() {
                const file = this.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        profilePlaceholder.style.display = 'none';
                        
                        // Check if an image already exists
                        let img = profilePreview.querySelector('img');
                        if (!img) {
                            img = document.createElement('img');
                            profilePreview.appendChild(img);
                        }
                        
                        img.src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });
            
            // Add Project Functionality
            const addProjectBtn = document.getElementById('addProjectBtn');
            const projectsContainer = document.getElementById('projectsContainer');
            let projectCount = 0;
            
            addProjectBtn.addEventListener('click', function() {
                projectCount++;
                
                const projectItem = document.createElement('div');
                projectItem.className = 'project-item';
                projectItem.id = `project-${projectCount}`;
                
                projectItem.innerHTML = `
                    <div class="form-group">
                        <label for="projectName-${projectCount}">Project Name</label>
                        <input type="text" id="projectName-${projectCount}" name="projectName-${projectCount}" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="projectYear-${projectCount}">Year</label>
                        <input type="number" id="projectYear-${projectCount}" name="projectYear-${projectCount}" min="1900" max="2100" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="projectLocation-${projectCount}">Location</label>
                        <input type="text" id="projectLocation-${projectCount}" name="projectLocation-${projectCount}" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="projectDescription-${projectCount}">Description</label>
                        <textarea id="projectDescription-${projectCount}" name="projectDescription-${projectCount}" required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="projectImage-${projectCount}">Project Image</label>
                        <input type="file" id="projectImage-${projectCount}" name="projectImages" accept="image/*" class="project-image-input">
                        <div class="project-image-preview" id="projectImagePreview-${projectCount}">
                            <span>Project Image</span>
                        </div>
                    </div>
                    
                    <button type="button" class="remove-project-btn" data-project="${projectCount}">Remove Project</button>
                `;
                
                projectsContainer.appendChild(projectItem);
                
                // Add event listener for project image preview
                const projectImageInput = document.getElementById(`projectImage-${projectCount}`);
                const projectImagePreview = document.getElementById(`projectImagePreview-${projectCount}`);
                
                projectImageInput.addEventListener('change', function() {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            projectImagePreview.innerHTML = '';
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            projectImagePreview.appendChild(img);
                        };
                        reader.readAsDataURL(file);
                    }
                });
                
                // Add event listener for remove project button
                const removeBtn = projectItem.querySelector('.remove-project-btn');
                removeBtn.addEventListener('click', function() {
                    const projectId = this.getAttribute('data-project');
                    const projectToRemove = document.getElementById(`project-${projectId}`);
                    projectsContainer.removeChild(projectToRemove);
                });
            });
        });
        // Function to fetch worker data and populate the form
document.addEventListener('DOMContentLoaded', async function() {
    try {
        // Get worker ID from URL query parameter or session storage
        const urlParams = new URLSearchParams(window.location.search);
        const workerId = urlParams.get('id') || localStorage.getItem('workerId');
        
        if (!workerId) {
            console.error('No worker ID provided');
            return;
        }
        
        // Fetch worker data from the server
        const response = await fetch(`/api/workers/${workerId}`);
        if (!response.ok) {
            throw new Error('Failed to fetch worker data');
        }
        
        const worker = await response.json();
        
        // Populate form fields with worker data
        document.getElementById('name').value = worker.name || '';
        document.getElementById('title').value = worker.professionalTitle || '';
        document.getElementById('experience').value = worker.experience || '';
        document.getElementById('about').value = worker.about || '';
        
        // Handle specialties checkboxes
        if (worker.specialties && worker.specialties.length > 0) {
            const specialties = ['sustainable', 'urban', 'residential', 'commercial', 'interior', 'landscape'];
            specialties.forEach(specialty => {
                const checkbox = document.getElementById(specialty);
                if (checkbox && worker.specialties.includes(checkbox.value)) {
                    checkbox.checked = true;
                }
            });
        }
        
        // Display profile image if exists
        if (worker.profileImage) {
            const profilePreview = document.getElementById('profilePreview');
            const profilePlaceholder = document.getElementById('profilePlaceholder');
            profilePlaceholder.style.display = 'none';
            
            let img = profilePreview.querySelector('img');
            if (!img) {
                img = document.createElement('img');
                profilePreview.appendChild(img);
            }
            
            // Check if profileImage is a full URL or a relative path
            img.src = worker.profileImage.startsWith('http') 
                ? worker.profileImage 
                : `/${worker.profileImage}`;
        }
        
        // Add projects
        if (worker.projects && worker.projects.length > 0) {
            const projectsContainer = document.getElementById('projectsContainer');
            projectsContainer.innerHTML = ''; // Clear any existing projects
            
            worker.projects.forEach((project, index) => {
                // Trigger the add project button click
                document.getElementById('addProjectBtn').click();
                
                // Fill in the project fields
                setTimeout(() => {
                    document.getElementById(`projectName-${index+1}`).value = project.name || '';
                    document.getElementById(`projectYear-${index+1}`).value = project.year || '';
                    document.getElementById(`projectLocation-${index+1}`).value = project.location || '';
                    document.getElementById(`projectDescription-${index+1}`).value = project.description || '';
                    
                    // Display project image if exists
                    if (project.image) {
                        const projectImagePreview = document.getElementById(`projectImagePreview-${index+1}`);
                        projectImagePreview.innerHTML = '';
                        
                        const img = document.createElement('img');
                        img.src = project.image.startsWith('http') ? project.image : `/${project.image}`;
                        projectImagePreview.appendChild(img);
                    }
                }, 100); // Small delay to ensure DOM elements are created
            });
        }
        
    } catch (error) {
        console.error('Error loading worker data:', error);
        alert('Failed to load profile data. Please try again later.');
    }
});

// // Modify form submission
// document.getElementById('architectForm').addEventListener('submit', async function(e) {
//     e.preventDefault();
    
//     try {
        
//         const workerId = "<%= user._id%>";
        
//         if (!workerId) {
//             console.error('No worker ID provided');
//             return;
//         }
        
//         const formData = new FormData(this);
        
//         // Add worker ID
//         formData.append('workerId', workerId);
        
//         // Collect specialties
//         const specialtiesChecked = document.querySelectorAll('input[name="specialties"]:checked');
//         const specialties = Array.from(specialtiesChecked).map(checkbox => checkbox.value);
//         formData.delete('specialties'); // Remove existing entries
//         specialties.forEach(specialty => formData.append('specialties', specialty));
        
//         // Collect projects data
//         const projects = [];
//         const projectItems = document.querySelectorAll('.project-item');
        
//         projectItems.forEach((item, index) => {
//             const projectId = item.id.split('-')[1];
//             const project = {
//                 name: document.getElementById(`projectName-${projectId}`).value,
//                 year: document.getElementById(`projectYear-${projectId}`).value,
//                 location: document.getElementById(`projectLocation-${projectId}`).value,
//                 description: document.getElementById(`projectDescription-${projectId}`).value
//             };
//             projects.push(project);
//         });
        
//         // Add projects as JSON string
//         formData.append('projects', JSON.stringify(projects));
        
//         // Send data to server
//         const response = await fetch(`/api/workers/${workerId}`, {
//             method: 'PUT',
//             body: formData
//         });
        
//         if (!response.ok) {
//             throw new Error('Failed to update profile');
//         }
        
//         const result = await response.json();
//         alert('Profile updated successfully!');
        
//         // Redirect to profile page or dashboard
//         window.location.href = '/workerdashboard.html';
        
//     } catch (error) {
//         console.error('Error updating profile:', error);
//         alert('Failed to update profile. Please try again later.');
//     }
// });
    </script>
</body>
</html>