<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <style>
        :root {
            --primary-color: #4D7A70;
            --secondary-color: #6A9E8E;
            --accent-color: #A3C5BB;
            --light-color: #F5F5F5;
            --dark-color: #363636;
            --error-color: #d9534f;
            --success-color: #2ecc71;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light-color);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-image: linear-gradient(135deg, var(--light-color) 0%, var(--accent-color) 100%);
        }

        .login-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
            width: 400px;
            max-width: 90%;
            overflow: hidden;
            padding: 30px;
        }

        .login-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .login-header h1 {
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .login-header p {
            color: var(--dark-color);
        }

        .input-group {
            margin-bottom: 20px;
            position: relative;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            color: var(--dark-color);
            font-weight: 500;
        }

        .input-group input {
            width: 100%;
            padding: 12px 15px;
            border-radius: 5px;
            border: 1px solid #000000;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        .input-group input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .password-container {
            position: relative;
        }

        .password-container input {
            padding-right: 40px;
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            border: none;
            background: none;
            cursor: pointer;
            color: var(--dark-color);
            font-size: 14px;
        }

        .toggle-password:hover {
            color: var(--primary-color);
        }

        .input-group .error-message {
            color: var(--error-color);
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .input-group.error input {
            border-color: var(--error-color);
        }

        .input-group.error .error-message {
            display: block;
        }

        .remember-forgot {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
        }

        .remember-me {
            display: flex;
            align-items: center;
        }

        .remember-me input {
            margin-right: 5px;
        }

        .forgot-password a {
            color: var(--primary-color);
            text-decoration: none;
            transition: color 0.3s;
        }

        .forgot-password a:hover {
            color: var(--dark-color);
            text-decoration: underline;
        }

        .submit-btn {
            width: 100%;
            padding: 12px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-btn:hover {
            background-color: var(--dark-color);
        }

        .submit-btn:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .pass-key-info {
            color: var(--dark-color);
            font-size: 12px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-header">
            <h1><%= title || 'Admin Login' %></h1>
            <p><%= subtitle || 'Enter your details to access the dashboard' %></p>
        </div>
        
        <% if (messages.error) { %>
            <div class="alert alert-error">
                <%= messages.error %>
            </div>
        <% } %>
        
        <% if (messages.success) { %>
            <div class="alert alert-success">
                <%= messages.success %>
            </div>
        <% } %>

        <form id="loginForm" action="/admin-login" method="POST">
            <div class="input-group" id="emailGroup">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" placeholder="Enter your email" value="<%= formData.email || '' %>">
                <span class="error-message">Please enter a valid email address</span>
            </div>
            <div class="input-group" id="passwordGroup">
                <label for="password">Password</label>
                <div class="password-container">
                    <input type="password" id="password" name="password" placeholder="Enter your password">
                    <button type="button" class="toggle-password" id="togglePassword">Show</button>
                </div>
                <span class="error-message">Password must be at least 8 characters</span>
            </div>
            <div class="input-group" id="passKeyGroup">
                <label for="passKey">Pass Key</label>
                <div class="password-container">
                    <input type="password" id="passKey" name="passKey" placeholder="Enter your secret pass key">
                    <button type="button" class="toggle-password" id="togglePassKey">Show</button>
                </div>
                <p class="pass-key-info">Enter your personal secret code for additional security</p>
                <span class="error-message">Please enter your pass key</span>
            </div>
            <div class="remember-forgot">
                <div class="remember-me">
                    <input type="checkbox" id="rememberMe" name="rememberMe" <%= formData.rememberMe ? 'checked' : '' %>>
                    <label for="rememberMe">Remember me</label>
                </div>
                <div class="forgot-password">
                    <a href="#" id="forgotPassword">Forgot password?</a>
                </div>
            </div>
            <button type="submit" class="submit-btn" id="signInBtn">Sign In</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginForm = document.getElementById('loginForm');
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const passKeyInput = document.getElementById('passKey');
            const togglePassword = document.getElementById('togglePassword');
            const togglePassKey = document.getElementById('togglePassKey');
            const forgotPasswordLink = document.getElementById('forgotPassword');
            const signInBtn = document.getElementById('signInBtn');

            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.textContent = type === 'password' ? 'Show' : 'Hide';
            });

            togglePassKey.addEventListener('click', function() {
                const type = passKeyInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passKeyInput.setAttribute('type', type);
                this.textContent = type === 'password' ? 'Show' : 'Hide';
            });

            forgotPasswordLink.addEventListener('click', function(e) {
                e.preventDefault();
                const email = emailInput.value.trim();
                if (isValidEmail(email)) {
                    fetch('/forgot-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ email: email })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Password reset link has been sent to your email address.');
                        } else {
                            alert(data.message || 'Failed to send reset link.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    });
                } else {
                    alert('Please enter a valid email address first.');
                    emailInput.focus();
                }
            });

            loginForm.addEventListener('submit', function(e) {
                let isValid = true;
                
                // Validate email
                if (!isValidEmail(emailInput.value.trim())) {
                    document.getElementById('emailGroup').classList.add('error');
                    isValid = false;
                } else {
                    document.getElementById('emailGroup').classList.remove('error');
                }
                
                // Validate password
                if (passwordInput.value.length < 8) {
                    document.getElementById('passwordGroup').classList.add('error');
                    isValid = false;
                } else {
                    document.getElementById('passwordGroup').classList.remove('error');
                }
                
                // Validate passKey
                if (passKeyInput.value.trim() === '') {
                    document.getElementById('passKeyGroup').classList.add('error');
                    isValid = false;
                } else {
                    document.getElementById('passKeyGroup').classList.remove('error');
                }
                
                if (!isValid) {
                    e.preventDefault();
                }
            });

            function isValidEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }
        });
    </script>
</body>
</html>